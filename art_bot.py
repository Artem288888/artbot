from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import telebot
import time
import os

# --- –¢–≤–æ—ó –¥–∞–Ω—ñ ---
BOT_TOKEN = '7650951016:AAE1sBUl6Lq-Y9xwbjyyoDlcPhQsWyYpnR4'
CHAT_ID = '6854620915'

# --- –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç ---
bot = telebot.TeleBot(BOT_TOKEN)

# --- –§–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–±–∞—á–µ–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤ ---
SEEN_FILE = 'seen_plates.txt'

# --- –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–æ–º–µ—Ä–∏ –∑ —Ñ–∞–π–ª—É ---
def load_seen_plates():
    if not os.path.exists(SEEN_FILE):
        return set()
    with open(SEEN_FILE, 'r', encoding='utf-8') as f:
        return set(line.strip() for line in f if line.strip())

# --- –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤—ñ –Ω–æ–º–µ—Ä–∏ —É —Ñ–∞–π–ª ---
def save_seen_plates(plates):
    with open(SEEN_FILE, 'a', encoding='utf-8') as f:
        for plate in plates:
            f.write(plate + '\n')

seen_plates = load_seen_plates()

# --- –£–º–æ–≤–∞: —á–∏ —î –¥–≤—ñ –Ω—É–ª—ñ –∞–±–æ –¥–≤—ñ —Å—ñ–º–∫–∏ —ñ –±—ñ–ª—å—à–µ ---
def is_interesting_plate(plate):
    plate_str = plate.replace(" ", "").upper()
    zeros = plate_str.count("0")
    sevens = plate_str.count("7")

    return (
        zeros >= 2 or
        sevens >= 2 or
        "0707" in plate_str or
        "7707" in plate_str
    )

def check_site():
    print("–ö—Ä–æ–∫ 1: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∞–π—Ç—É")
    service = Service(r'C:\Users\Admin\Desktop\–±–æ—Ç\chromedriver.exe')
    options = webdriver.ChromeOptions()
    options.add_argument('--headless')  # –Ø–∫—â–æ —Ö–æ—á–µ—à –±–∞—á–∏—Ç–∏ –±—Ä–∞—É–∑–µ—Ä ‚Äî –≤–∏–¥–∞–ª–∏ —Ü–µ–π —Ä—è–¥–æ–∫
    driver = webdriver.Chrome(service=service, options=options)

    try:
        url = "https://opendata.hsc.gov.ua/check-leisure-license-plates/"
        driver.get(url)

        print("–ö—Ä–æ–∫ 2: –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∞—é—á–æ–≥–æ —Å–ø–∏—Å–∫—É '–û–±–ª–∞—Å—Ç—å'")
        WebDriverWait(driver, 40).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, 'select[name="region"]'))
        )
        oblast_select = driver.find_element(By.CSS_SELECTOR, 'select[name="region"]')
        for option in oblast_select.find_elements(By.TAG_NAME, "option"):
            if option.text.strip() == "–õ—å–≤—ñ–≤—Å—å–∫–∞":
                option.click()
                print("–û–±—Ä–∞–Ω–∞ –æ–±–ª–∞—Å—Ç—å: –õ—å–≤—ñ–≤—Å—å–∫–∞")
                break

        time.sleep(1)

        # –í–∏–±—ñ—Ä –¢–°–¶ "–í–µ—Å—å —Ä–µ–≥—ñ–æ–Ω"
        tsc_select = driver.find_element(By.CSS_SELECTOR, 'select[name="tsc"]')
        for option in tsc_select.find_elements(By.TAG_NAME, "option"):
            if option.text.strip() == "–í–µ—Å—å —Ä–µ–≥—ñ–æ–Ω":
                option.click()
                print("–û–±—Ä–∞–Ω–æ –¢–°–¶: –í–µ—Å—å —Ä–µ–≥—ñ–æ–Ω")
                break

        time.sleep(1)

        # –í–∏–±—ñ—Ä —Ç–∏–ø—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É: "–õ–µ–≥–∫–æ–≤–∏–π, –≤–∞–Ω—Ç–∞–∂–Ω–∏–π"
        type_select = driver.find_element(By.CSS_SELECTOR, 'select[name="type_venichle"]')
        for option in type_select.find_elements(By.TAG_NAME, "option"):
            if option.get_attribute("value") == "light_car_and_truck":
                option.click()
                print("–û–±—Ä–∞–Ω–æ —Ç–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É: –õ–µ–≥–∫–æ–≤–∏–π, –≤–∞–Ω—Ç–∞–∂–Ω–∏–π")
                break

        time.sleep(1)

        # –ù–∞—Ç–∏—Å–∫–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ü–ï–†–ï–ì–õ–Ø–ù–£–¢–ò"
        view_button = driver.find_element(By.XPATH, '//input[@type="submit" and @value="–ü–ï–†–ï–ì–õ–Ø–ù–£–¢–ò"]')
        view_button.click()
        print("–ù–∞—Ç–∏—Å–Ω—É—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü–ï–†–ï–ì–õ–Ø–ù–£–¢–ò")

        time.sleep(3)

        while True:
            WebDriverWait(driver, 20).until(
                EC.presence_of_element_located((By.CSS_SELECTOR, "table tbody tr"))
            )
            rows = driver.find_elements(By.CSS_SELECTOR, "table tbody tr")

            new_matches = []

            for row in rows:
                cols = row.find_elements(By.TAG_NAME, "td")
                if not cols:
                    continue
                plate = cols[0].text.strip()
                print(f"–ó–Ω–∞–π–¥–µ–Ω–∏–π –Ω–æ–º–µ—Ä: {plate}")

                if plate not in seen_plates and is_interesting_plate(plate):
                    seen_plates.add(plate)
                    new_matches.append(plate)

            for plate in new_matches:
                bot.send_message(CHAT_ID, f"üÜï –ó–Ω–∞–π–¥–µ–Ω–æ —Ü—ñ–∫–∞–≤–∏–π –Ω–æ–º–µ—Ä: {plate}")

            if new_matches:
                save_seen_plates(new_matches)

            # –ù–∞—Ç–∏—Å–∫–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ù–∞—Å—Ç—É–ø–Ω–∞"
            try:
                next_button = driver.find_element(By.XPATH, '//a[contains(text(), "–ù–∞—Å—Ç—É–ø–Ω–∞")]')
                classes = next_button.get_attribute("class")
                if 'disabled' in classes:
                    print("–û—Å—Ç–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞, –∑—É–ø–∏–Ω—è—î–º–æ—Å—è.")
                    break
                else:
                    next_button.click()
                    print("–ù–∞—Ç–∏—Å–Ω—É—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ù–∞—Å—Ç—É–ø–Ω–∞")
                    time.sleep(3)
            except Exception as e:
                print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∞–±–æ –∫–ª—ñ–∫–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É '–ù–∞—Å—Ç—É–ø–Ω–∞': {e}")
                break

    except Exception as e:
        print(f"üî¥ –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –≤ check_site: {e}")
        raise
    finally:
        bot.send_message(CHAT_ID, "‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ß–µ–∫–∞—î–º–æ 5 —Ö–≤ —ñ –ø–æ—á–∏–Ω–∞—î–º–æ –∑–Ω–æ–≤—É.")
        driver.quit()
        print("–ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä–∏—Ç–æ.")

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É—î–º–æ –Ω–æ–≤–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤...")

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        bot.send_message(CHAT_ID, "üîß –¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –±–æ—Ç–∞!")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    while True:
        try:
            check_site()
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞: {e}")
        time.sleep(300)  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω

